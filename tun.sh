#!/bin/bash

# 控制台字体
red() {
    echo -e "\033[31m\033[01m$1\033[0m"
}

green() {
    echo -e "\033[32m\033[01m$1\033[0m"
}

yellow() {
    echo -e "\033[33m\033[01m$1\033[0m"
}

REGEX=("debian" "ubuntu" "centos|red hat|kernel|oracle linux|alma|rocky" "'amazon linux'")
RELEASE=("Debian" "Ubuntu" "CentOS" "CentOS" "Alpine")
PACKAGE_UPDATE=("apt -y update" "apt -y update" "yum -y update" "yum -y update")
PACKAGE_INSTALL=("apt -y install" "apt -y install" "yum -y install" "yum -y install")
PACKAGE_REMOVE=("apt -y remove" "apt -y remove" "yum -y remove" "yum -y remove")

[[ $EUID -ne 0 ]] && red "Please run the script under root user" && exit 1

CMD=("$(grep -i pretty_name /etc/os-release 2>/dev/null | cut -d \" -f2)" "$(hostnamectl 2>/dev/null | grep -i system | cut -d : -f2)" "$(lsb_release -sd 2>/dev/null)" "$(grep -i description /etc/lsb-release 2>/dev/null | cut -d \" -f2)" "$(grep . /etc/redhat-release 2>/dev/null)" "$(grep . /etc/issue 2>/dev/null | cut -d \\ -f1 | sed '/^[ ]*$/d')")

for i in "${CMD[@]}"; do
    SYS="$i" && [[ -n $SYS ]] && break
done

for ((int = 0; int < ${#REGEX[@]}; int++)); do
    [[ $(echo "$SYS" | tr '[:upper:]' '[:lower:]') =~ ${REGEX[int]} ]] && SYSTEM="${RELEASE[int]}" && [[ -n $SYSTEM ]] && break
done

[[ -z $SYSTEM ]] && red "The current system that does not support VPS, please use the mainstream operating system" && exit 1

lxcovz(){
    case "$(systemd-detect-virt)" in
        openvz) echo "" ;;
        * ) red "The script only supports OpenVZ VPS with TUN module enabled!" && exit 1 ;;
    esac
}

checkTUN(){
    TUNStatus=1
    TUN=$(cat /dev/net/tun 2>&1 | tr '[:upper:]' '[:lower:]')
    [[ ! $TUN =~ 'in bad state' ]] && [[ ! $TUN =~ 'in error state' ]] && [[ ! $TUN =~ 'Die Dateizugriffsnummer ist in schlechter Verfassung' ]] && TUNStatus=0
}

openTUN(){
    checkTUN
    if [[ $TUNStatus == 1 ]]; then
        red "It is detected that the current VPS has enabled the TUN module, no need to re-enable it"
    fi
    if [[ $TUNStatus == 0 ]]; then
        yellow "VPS architecture detected as OpenVZ, trying to enable TUN using script"
        cd /dev
        mkdir net
        mknod net/tun c 10 200
        chmod 0666 net/tun
        sleep 2
        checkTUN
        if [[ $TUNStatus == 1 ]]; then
            green "OpenVZ The TUN module of VPS has been enabled successfully!"
            rm -f tun.sh
        else
            red "Failed to enable TUN module in OpenVZ VPS, please go to VPS control panel to enable it" 
            rm -f tun.sh
            exit 1
        fi
        cat <<EOF > /usr/bin/tun.sh
#!/bin/bash
# OpenVZ TUN module daemon, in case the TUN module fails after restart
# Generated by Script: AikoCute-Offical/Tun-install

cd /dev
mkdir net
mknod net/tun c 10 200
chmod 0666 net/tun
EOF
        chmod +x /usr/bin/tun.sh
        grep -qE "^ *@reboot root bash /usr/bin/tun.sh >/dev/null 2>&1" /etc/crontab || echo "@reboot root bash /usr/bin/tun.sh >/dev/null 2>&1" >> /etc/crontab
    fi
}

lxcovz
openTUN
